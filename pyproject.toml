[tool.poetry]
name = "rag-optimization-cnn-dailymail"
version = "0.1.0"
description = "Optimizing a Retrieval-Augmented Generation (RAG) system on the CNN/Daily Mail dataset using LangChain, with performance benchmarking and analysis via RAGAS."
authors = ["Hillary Kipkemoi <tenskap@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
langchain = "^0.2.11"
datasets = "^2.20.0"
python-dotenv = "^1.0.1"
langchain-community = "^0.2.10"
langchain-openai = "^0.1.19"
langchain-chroma = "^0.1.2"
tabulate = "^0.9.0"
rank-bm25 = "^0.2.2"
psycopg2 = "^2.9.9"
tiktoken = "^0.7.0"
langchain-postgres = "^0.0.9"
matplotlib = "^3.9.1"
altair = "^5.3.0"
seaborn = "^0.13.2"
scipy = "^1.14.0"
langchain-huggingface = "^0.0.3"
fastembed = {version = "^0.3.4", python = ">=3.10,<3.13"}
cohere = "^5.6.2"
langchain-cohere = "^0.1.9"
langchain-google-genai = "^1.0.8"

# Backend depencies
fastapi = "^0.111.1"
uvicorn = "^0.30.4"

[tool.poetry.group.dev.dependencies]
transformers = "^4.43.3"
ipykernel = "^6.29.5"
ipywidgets = "^8.1.3"
sentence-transformers = "^3.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
